class Producer extends Thread
{
    Consumer c;
    int n;
    Producer(){}

    public Producer(Consumer c,int n) {
        this.c = c;
        this.n = n;
    }

    synchronized public void run()
    {
        long x;
        for(int i=0;i<n;i++)
        {
            x = Math.round((Math.random()*100));
            System.out.println("Number Generated by Producer: "+x);
            try
            {
                c.num = x;
                c.start();
                wait();
            }
            catch(Exception e)
            {
                System.out.println("Waiting Error: "+e);
            }
        }

        System.out.println("The even numbers received by producer : "+c.evens);
    }
}

class Consumer extends Thread
{
    public int evens=0;
    long num;

    public Consumer() {}

    synchronized public void run()
    {
        if(num%2==0)
            evens++;
        notify();
    }
    
}

public class WaitDemo {
    public static void main(String[] args) {
        Producer p= new Producer(new Consumer(),10);
        p.start();
    }
}
